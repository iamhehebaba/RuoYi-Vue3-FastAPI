{
	"info": {
		"_postman_id": "d6657b29-0b58-4b88-bf2f-f78f349e7370",
		"name": "RuoYi-FastAPI",
		"description": "Postman collection for RuoYi-Vue3-FastAPI backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1381330"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Captcha Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);",
									"const json = pm.response.json() || {};",
									"pm.test('biz code 200', () => json.code === 200 && json.success === true);",
									"if (json.uuid) { pm.collectionVariables.set('uuid', json.uuid); }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/captchaImage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"captchaImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (x-www-form-urlencoded)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);",
									"const json = pm.response.json() || {};",
									"pm.test('biz code 200', () => json.code === 200 && json.success === true);",
									"if (json.token) { pm.collectionVariables.set('accessToken', json.token); }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								},
								{
									"key": "code",
									"value": "{{captcha_code}}"
								},
								{
									"key": "uuid",
									"value": "{{uuid}}"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);",
									"const json = pm.response.json() || {};",
									"pm.test('biz code 200', () => json.code === 200 && json.success === true);",
									"pm.collectionVariables.unset('accessToken');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Agent",
			"item": [
				{
					"name": "search assistants proxy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"",
									"    // 解析响应 body",
									"    const response = pm.response.json();",
									"",
									"    // 提取 assistant_id",
									"    const assistant_id = response[0].assistant_id;",
									"",
									"    console.log(assistant_id)",
									"",
									"    // 将 threadId 存储到环境变量",
									"    pm.environment.set(\"assistant_id\", assistant_id);",
									"",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{  \n    \"graph_id\": \"general_chatbot\",\n    \"limit\": 5,  \n    \"offset\": 0  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{proxy-to-langgraph}}/assistants/search",
							"host": [
								"{{proxy-to-langgraph}}"
							],
							"path": [
								"assistants",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "search assistants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"",
									"    // 解析响应 body",
									"    const response = pm.response.json();",
									"",
									"    // 提取 assistant_id",
									"    const assistant_id = response[0].assistant_id;",
									"",
									"    console.log(assistant_id)",
									"",
									"    // 将 threadId 存储到环境变量",
									"    pm.environment.set(\"assistant_id\", assistant_id);",
									"",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{  \n    \"graph_id\": \"general_chatbot\",\n    \"limit\": 5,  \n    \"offset\": 0  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9099/langgraph/assistants/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9099",
							"path": [
								"langgraph",
								"assistants",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a thread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"\r",
									"    // 解析响应 body\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    // 提取 threadId\r",
									"    const thread_id = response.data.threadId;\r",
									"\r",
									"    console.log(thread_id)\r",
									"\r",
									"    // 将 threadId 存储到环境变量\r",
									"    pm.environment.set(\"thread_id\", thread_id);\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n    \"graphId\": \"general_chatbot\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/langgraph/threads",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"langgraph",
								"threads"
							]
						}
					},
					"response": []
				},
				{
					"name": "get a thread(raw langgraph)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/threads/{{thread_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "list thread(raw langgraph)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"metadata\": {\n        \"user_id\": \"galen\",\n        \"graph_id\": \"general_chatbot\"\n    },    \n    \"status\": \"idle\",\n    \"limit\": 10,\n    \"offset\": 0,\n    \"sort_by\": \"created_at\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/threads/search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"threads",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "list thread",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"select\": [\n        \"thread_id\",\n        \"status\",\n        \"created_at\"\n    ],\n    \"status\": \"idle\",\n    \"limit\": 1,\n    \"offset\": 0,\n    \"sort_by\": \"created_at\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/langgraph/threads/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"langgraph",
								"threads",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a run",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"",
									"    // 解析响应 body",
									"    const response = pm.response.json();",
									"",
									"    // 提取 run_id",
									"    const run_id = response.data.runId;",
									"",
									"    console.log(run_id)",
									"",
									"    // 将 threadId 存储到环境变量",
									"    pm.environment.set(\"run_id\", run_id);",
									"",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"assistantId\": \"{{assistant_id}}\",\r\n    \"input\": {\r\n        \"user_id\": \"galen\",\r\n        \"query\": \"who is current us president?\",\r\n        \"dataset_ids\":[],\r\n        \"web_search_enabled\": true\r\n    },\r\n    \"stream_mode\": \"None\",\r\n    \"config\": {\r\n        \"configurable\": {\r\n            \"llm_factory\": \"DeepSeek\",\r\n            \"llm_name\": \"deepseek-chat\"\r\n        }\r\n    }    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/langgraph/threads/{{thread_id}}/runs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"langgraph",
								"threads",
								"{{thread_id}}",
								"runs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a run in stream mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"",
									"    // 解析响应 body",
									"    const response = pm.response.json();",
									"",
									"    // 提取 run_id",
									"    const run_id = response.data.runId;",
									"",
									"    console.log(run_id)",
									"",
									"    // 将 threadId 存储到环境变量",
									"    pm.environment.set(\"run_id\", run_id);",
									"",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"assistantId\": \"{{assistant_id}}\",\r\n    \"input\": {\r\n        \"user_id\": \"galen\",\r\n        \"query\": \"who is current us president?\",\r\n        \"web_search_enabled\": true,\r\n        \"dataset_ids\": [\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"configurable\": {\r\n            \"chat_llm_factory\": \"Tongyi-Qianwen\",\r\n            \"chat_llm_name\": \"deepseek-r1\"\r\n        }\r\n    },    \r\n    \"streamMode\": [\"messages\", \"updates\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/langgraph/threads/{{thread_id}}/runs/stream",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"langgraph",
								"threads",
								"{{thread_id}}",
								"runs",
								"stream"
							]
						}
					},
					"response": []
				},
				{
					"name": "get a run status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/langgraph/threads/{{thread_id}}/runs/{{run_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"langgraph",
								"threads",
								"{{thread_id}}",
								"runs",
								"{{run_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get run result",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/langgraph/threads/{{thread_id}}/runs/{{run_id}}/join",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"langgraph",
								"threads",
								"{{thread_id}}",
								"runs",
								"{{run_id}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "get thread history",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"limit\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/langgraph/threads/{{thread_id}}/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"langgraph",
								"threads",
								"{{thread_id}}",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "get role's agent",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/system/role/agent/allocatedList/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"system",
								"role",
								"agent",
								"allocatedList",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Agent-proxy mode",
			"item": [
				{
					"name": "search assistants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"",
									"    // 解析响应 body",
									"    const response = pm.response.json();",
									"",
									"    // 提取 assistant_id",
									"    const assistant_id = response[0].assistant_id;",
									"",
									"    console.log(assistant_id)",
									"",
									"    // 将 threadId 存储到环境变量",
									"    pm.environment.set(\"assistant_id\", assistant_id);",
									"",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{  \n    \"limit\": 100,  \n    \"offset\": 0  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/langgraph/assistants/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"langgraph",
								"assistants",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a thread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"\r",
									"    // 解析响应 body\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    // 提取 threadId\r",
									"    const thread_id = response.thread_id;\r",
									"\r",
									"    console.log(thread_id)\r",
									"\r",
									"    // 将 threadId 存储到环境变量\r",
									"    pm.environment.set(\"thread_id\", thread_id);\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n    \"metadata\": {\r\n        \"user_id\": 1,\r\n        \"graph_id\": \"general_chatbot\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/langgraph/threads",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"langgraph",
								"threads"
							]
						}
					},
					"response": []
				},
				{
					"name": "search threads",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"select\": [\n        \"thread_id\",\n        \"status\",\n        \"created_at\"\n    ],\n    \"metadata\": {\n        \"graph_id\": \"general_chatbot\",\n        \"user_id\": 1\n    },\n    \"status\": \"idle\",\n    \"limit\": 100,\n    \"offset\": 0,\n    \"sort_by\": \"updated_at\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/langgraph/threads/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"langgraph",
								"threads",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a run",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"",
									"    // 解析响应 body",
									"    const response = pm.response.json();",
									"",
									"    // 提取 run_id",
									"    const run_id = response.run_id;",
									"",
									"    console.log(run_id)",
									"",
									"    // 将 threadId 存储到环境变量",
									"    pm.environment.set(\"run_id\", run_id);",
									"",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"assistant_id\": \"{{assistant_id}}\",\r\n    \"input\": {\r\n        \"user_id\": \"galen\",\r\n        \"query\": \"who is current us president?\",\r\n        \"dataset_ids\":[],\r\n        \"web_search_enabled\": true\r\n    },\r\n    \"config\": {\r\n        \"configurable\": {\r\n            \"chat_llm_factory\": \"Ollama\",\r\n            \"chat_llm_name\": \"codegeex4\"\r\n        }\r\n    }    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/langgraph/threads/{{thread_id}}/runs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"langgraph",
								"threads",
								"{{thread_id}}",
								"runs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create a run in stream mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"",
									"    // 解析响应 body",
									"    const response = pm.response.json();",
									"",
									"    // 提取 run_id",
									"    const run_id = response.data.runId;",
									"",
									"    console.log(run_id)",
									"",
									"    // 将 threadId 存储到环境变量",
									"    pm.environment.set(\"run_id\", run_id);",
									"",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"assistant_id\": \"{{assistant_id}}\",\r\n    \"input\": {\r\n        \"user_id\": \"galen\",\r\n        \"query\": \"who is current us president?\",\r\n        \"web_search_enabled\": true,\r\n        \"dataset_ids\": [\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"configurable\": {\r\n            \"chat_llm_factory\": \"Ollama\",\r\n            \"chat_llm_name\": \"codegeex4\"\r\n        }\r\n    },    \r\n    \"stream_mode\": [\"messages\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/langgraph/threads/{{thread_id}}/runs/stream",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"langgraph",
								"threads",
								"{{thread_id}}",
								"runs",
								"stream"
							]
						}
					},
					"response": []
				},
				{
					"name": "get a run status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/langgraph/threads/{{thread_id}}/runs/{{run_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"langgraph",
								"threads",
								"{{thread_id}}",
								"runs",
								"{{run_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get run result",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/langgraph/threads/{{thread_id}}/runs/{{run_id}}/join",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"langgraph",
								"threads",
								"{{thread_id}}",
								"runs",
								"{{run_id}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "get thread history",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"limit\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/langgraph/threads/{{thread_id}}/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"langgraph",
								"threads",
								"{{thread_id}}",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete thread",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/langgraph/threads/{{thread_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"langgraph",
								"threads",
								"{{thread_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get role's agent",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/system/role/agent/allocatedList/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"system",
								"role",
								"agent",
								"allocatedList",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);",
									"pm.test('biz code 200', () => (pm.response.json()||{}).code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/getInfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Routers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);",
									"pm.test('biz code 200', () => (pm.response.json()||{}).code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/getRouters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getRouters"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);",
									"const j=pm.response.json()||{}; pm.test('biz code 200', ()=> j.code===200 && j.success===true);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/system/user/list?pageNum=1&pageSize=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"system",
								"user",
								"list"
							],
							"query": [
								{
									"key": "pageNum",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get dept tree",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);",
									"const j=pm.response.json()||{}; pm.test('biz code 200', ()=> j.code===200 && j.success===true);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/system/user/deptTree",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"system",
								"user",
								"deptTree"
							]
						}
					},
					"response": []
				},
				{
					"name": "get one user detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);",
									"const j=pm.response.json()||{}; pm.test('biz code 200', ()=> j.code===200 && j.success===true);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/system/user/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"system",
								"user",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "get current user detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);",
									"const j=pm.response.json()||{}; pm.test('biz code 200', ()=> j.code===200 && j.success===true);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/system/user/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"system",
								"user",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Common",
			"item": [
				{
					"name": "Upload File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);",
									"pm.test('biz code 200', () => (pm.response.json()||{}).code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/common/upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"common",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download File",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/common/download?fileName=demo.xlsx&delete=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"common",
								"download"
							],
							"query": [
								{
									"key": "fileName",
									"value": "demo.xlsx"
								},
								{
									"key": "delete",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Resource",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/common/download/resource?resource=profile/upload/2021/11/21/demo.png",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"common",
								"download",
								"resource"
							],
							"query": [
								{
									"key": "resource",
									"value": "profile/upload/2021/11/21/demo.png"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Proxy",
			"item": [
				{
					"name": "GET /proxy/langgraph/openapi.json",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/langgraph/openapi.json",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"langgraph",
								"openapi.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /proxy/service-a/health",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/proxy/service-a/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"service-a",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /proxy/service-b/admin/ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('HTTP 200', () => pm.response.code === 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ping\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/proxy/service-b/admin/ping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy",
								"service-b",
								"admin",
								"ping"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "System Management",
			"item": [
				{
					"name": "Post",
					"item": [
						{
							"name": "List Posts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200', () => pm.response.code === 200);",
											"pm.test('biz code 200', () => (pm.response.json()||{}).code === 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/post/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"post",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Post",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"postId\": 0,\n  \"postCode\": \"dev\",\n  \"postName\": \"开发\",\n  \"postSort\": 1,\n  \"status\": \"0\",\n  \"remark\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/post",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Post Detail",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/post/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"post",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Posts",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/post/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"post",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Export Posts",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "postName",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/system/post/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"post",
										"export"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Dict",
					"item": [
						{
							"name": "Type List",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/dict/type/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dict",
										"type",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Add",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dictId\": 0,\n  \"dictName\": \"测试字典\",\n  \"dictType\": \"test_type\",\n  \"status\": \"0\",\n  \"remark\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/dict/type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dict",
										"type"
									]
								}
							},
							"response": []
						},
						{
							"name": "Data List",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/dict/data/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dict",
										"data",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Data Add",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dictCode\": 0,\n  \"dictSort\": 1,\n  \"dictLabel\": \"值1\",\n  \"dictValue\": \"1\",\n  \"dictType\": \"test_type\",\n  \"status\": \"0\",\n  \"remark\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/dict/data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dict",
										"data"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Option Select",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/dict/type/optionselect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dict",
										"type",
										"optionselect"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Dept",
					"item": [
						{
							"name": "List Depts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/dept/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dept",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Depts Exclude",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/dept/list/exclude/100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dept",
										"list",
										"exclude",
										"100"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Dept",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"parentId\": 0,\n  \"deptName\": \"测试部门\",\n  \"orderNum\": 1,\n  \"leader\": \"张三\",\n  \"phone\": \"13800000000\",\n  \"email\": \"test@example.com\",\n  \"status\": \"0\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/dept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dept"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Dept",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deptId\": 1,\n  \"parentId\": 0,\n  \"deptName\": \"测试部门-修改\",\n  \"orderNum\": 1,\n  \"leader\": \"李四\",\n  \"phone\": \"13800000001\",\n  \"email\": \"test2@example.com\",\n  \"status\": \"0\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/dept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dept"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Dept Detail",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/dept/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dept",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Depts",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/dept/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"dept",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Menu",
					"item": [
						{
							"name": "Tree Select",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/menu/treeselect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"menu",
										"treeselect"
									]
								}
							},
							"response": []
						},
						{
							"name": "Role Menu Tree Select",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/menu/roleMenuTreeselect/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"menu",
										"roleMenuTreeselect",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Menus",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/menu/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"menu",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Menu",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"menuName\": \"测试菜单\",\n  \"parentId\": 0,\n  \"orderNum\": 1,\n  \"path\": \"test\",\n  \"component\": \"system/test/index\",\n  \"menuType\": \"C\",\n  \"visible\": \"0\",\n  \"status\": \"0\",\n  \"perms\": \"system:test:list\",\n  \"icon\": \"menu\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/menu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"menu"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Menu",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"menuId\": 1,\n  \"menuName\": \"测试菜单-修改\",\n  \"parentId\": 0,\n  \"orderNum\": 1,\n  \"path\": \"test\",\n  \"component\": \"system/test/index\",\n  \"menuType\": \"C\",\n  \"visible\": \"0\",\n  \"status\": \"0\",\n  \"perms\": \"system:test:list\",\n  \"icon\": \"menu\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/menu",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"menu"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Menu Detail",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/menu/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"menu",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Menus",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/menu/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"menu",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Role",
					"item": [
						{
							"name": "allocated agents",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/role/authUser/allocatedList?pageNum=1&pageSize=10&roleId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"authUser",
										"allocatedList"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										},
										{
											"key": "roleId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Assign agents to role",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/role/authUser/selectAll?roleId=1&userIds=2,3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"authUser",
										"selectAll"
									],
									"query": [
										{
											"key": "roleId",
											"value": "1"
										},
										{
											"key": "userIds",
											"value": "2,3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/role/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Role",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roleName\": \"测试角色\",\n  \"roleKey\": \"test\",\n  \"roleSort\": 1,\n  \"status\": \"0\",\n  \"menuIds\": [1,2]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Role",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roleId\": 1,\n  \"roleName\": \"测试角色-修改\",\n  \"roleKey\": \"test\",\n  \"roleSort\": 1,\n  \"status\": \"0\",\n  \"menuIds\": [1,2]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Role Detail",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/role/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Roles",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/role/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Role Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roleId\": 1,\n  \"status\": \"0\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/role/changeStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"changeStatus"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Role Data Scope",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roleId\": 1,\n  \"dataScope\": \"2\",\n  \"deptIds\": [1,2],\n  \"deptCheckStrictly\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/role/dataScope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"dataScope"
									]
								}
							},
							"response": []
						},
						{
							"name": "Export Roles",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "roleName",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/system/role/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"export"
									]
								}
							},
							"response": []
						},
						{
							"name": "Role Dept Tree",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/role/deptTree/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"deptTree",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Allocated Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/role/authUser/allocatedList?pageNum=1&pageSize=10&roleId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"authUser",
										"allocatedList"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										},
										{
											"key": "roleId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unallocated Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/role/authUser/unallocatedList?pageNum=1&pageSize=10&roleId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"authUser",
										"unallocatedList"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										},
										{
											"key": "roleId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Assign Users To Role (Select All)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/role/authUser/selectAll?roleId=1&userIds=2,3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"authUser",
										"selectAll"
									],
									"query": [
										{
											"key": "roleId",
											"value": "1"
										},
										{
											"key": "userIds",
											"value": "2,3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Assign User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": 2,\n  \"roleId\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/role/authUser/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"authUser",
										"cancel"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Assign Users (All)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/role/authUser/cancelAll?roleId=1&userIds=2,3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"role",
										"authUser",
										"cancelAll"
									],
									"query": [
										{
											"key": "roleId",
											"value": "1"
										},
										{
											"key": "userIds",
											"value": "2,3"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Config",
					"item": [
						{
							"name": "List Configs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/config/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"config",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Config",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"configName\": \"初始密码长度\",\n  \"configKey\": \"sys.user.initPassword\",\n  \"configValue\": \"123456\",\n  \"configType\": \"Y\",\n  \"remark\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Config",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"configId\": 1,\n  \"configName\": \"初始密码长度-修改\",\n  \"configKey\": \"sys.user.initPassword\",\n  \"configValue\": \"123456\",\n  \"configType\": \"Y\",\n  \"remark\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Config Detail",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/config/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"config",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Configs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/config/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"config",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh Config Cache",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/config/refreshCache",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"config",
										"refreshCache"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Config By Key",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/config/configKey/sys.user.initPassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"config",
										"configKey",
										"sys.user.initPassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Export Configs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "configName",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/system/config/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"config",
										"export"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Notice",
					"item": [
						{
							"name": "List Notices",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/notice/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"notice",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Notice",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"noticeTitle\": \"示例公告\",\n  \"noticeType\": \"1\",\n  \"noticeContent\": \"内容\",\n  \"status\": \"0\",\n  \"remark\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/notice",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"notice"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Notice",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"noticeId\": 1,\n  \"noticeTitle\": \"示例公告-修改\",\n  \"noticeType\": \"2\",\n  \"noticeContent\": \"内容修改\",\n  \"status\": \"0\",\n  \"remark\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/system/notice",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"notice"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Notice Detail",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/notice/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"notice",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Notices",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/system/notice/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"notice",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Monitor",
			"item": [
				{
					"name": "Job",
					"item": [
						{
							"name": "List Jobs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/job/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"job",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Job",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobName\": \"示例任务\",\n  \"jobGroup\": \"DEFAULT\",\n  \"invokeTarget\": \"demo.task\",\n  \"cronExpression\": \"0/30 * * * * ?\",\n  \"misfirePolicy\": \"1\",\n  \"concurrent\": \"0\",\n  \"status\": \"0\",\n  \"remark\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/monitor/job",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"job"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Job",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": 1,\n  \"jobName\": \"示例任务-修改\",\n  \"jobGroup\": \"DEFAULT\",\n  \"invokeTarget\": \"demo.task\",\n  \"cronExpression\": \"0/20 * * * * ?\",\n  \"status\": \"0\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/monitor/job",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"job"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Detail",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/job/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"job",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Job Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": 1,\n  \"status\": \"0\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/monitor/job/changeStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"job",
										"changeStatus"
									]
								}
							},
							"response": []
						},
						{
							"name": "Run Job Once",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/monitor/job/run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"job",
										"run"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Jobs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/job/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"job",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Export Jobs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "jobName",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/monitor/job/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"job",
										"export"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Job Log",
					"item": [
						{
							"name": "List Job Logs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/jobLog/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"jobLog",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Job Logs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/jobLog/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"jobLog",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Clean Job Logs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/jobLog/clean",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"jobLog",
										"clean"
									]
								}
							},
							"response": []
						},
						{
							"name": "Export Job Logs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "jobName",
											"value": ""
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/monitor/jobLog/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"jobLog",
										"export"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Log",
					"item": [
						{
							"name": "Operation Log",
							"item": [
								{
									"name": "List Operation Logs",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('HTTP 200',()=>pm.response.code===200);",
													"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/operlog/list?pageNum=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"operlog",
												"list"
											],
											"query": [
												{
													"key": "pageNum",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Operation Logs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/operlog/1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"operlog",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clean Operation Logs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/operlog/clean",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"operlog",
												"clean"
											]
										}
									},
									"response": []
								},
								{
									"name": "Export Operation Logs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": ""
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/monitor/operlog/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"operlog",
												"export"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Login Log",
							"item": [
								{
									"name": "List Login Logs",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('HTTP 200',()=>pm.response.code===200);",
													"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/logininfor/list?pageNum=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"logininfor",
												"list"
											],
											"query": [
												{
													"key": "pageNum",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Login Logs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/logininfor/1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"logininfor",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Clean Login Logs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/logininfor/clean",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"logininfor",
												"clean"
											]
										}
									},
									"response": []
								},
								{
									"name": "Unlock User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/monitor/logininfor/unlock/admin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"logininfor",
												"unlock",
												"admin"
											]
										}
									},
									"response": []
								},
								{
									"name": "Export Login Logs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "userName",
													"value": ""
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/monitor/logininfor/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"monitor",
												"logininfor",
												"export"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Cache",
					"item": [
						{
							"name": "Cache Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/cache",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"cache"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Cache Names",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/cache/getNames",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"cache",
										"getNames"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Cache Keys",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/cache/getKeys/sys_config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"cache",
										"getKeys",
										"sys_config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Cache Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/cache/getValue/sys_config/sys.user.initPassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"cache",
										"getValue",
										"sys_config",
										"sys.user.initPassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Clear Cache By Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/cache/clearCacheName/sys_config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"cache",
										"clearCacheName",
										"sys_config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Clear Cache By Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/cache/clearCacheKey/sys.user.initPassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"cache",
										"clearCacheKey",
										"sys.user.initPassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Clear All Cache",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/cache/clearCacheAll",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"cache",
										"clearCacheAll"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Server",
					"item": [
						{
							"name": "Get Server Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/server",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"server"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Online",
					"item": [
						{
							"name": "List Online Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/online/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"online",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Force Logout",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/monitor/online/abc123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"monitor",
										"online",
										"abc123"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Tool",
			"item": [
				{
					"name": "Generator",
					"item": [
						{
							"name": "List Gen Tables",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tool/gen/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List DB Tables",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tool/gen/db/list?pageNum=1&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen",
										"db",
										"list"
									],
									"query": [
										{
											"key": "pageNum",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Import Tables",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('HTTP 200',()=>pm.response.code===200);",
											"pm.test('biz code 200',()=> (pm.response.json()||{}).code===200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tool/gen/importTable?tables=sys_user,sys_dept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen",
										"importTable"
									],
									"query": [
										{
											"key": "tables",
											"value": "sys_user,sys_dept"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Gen Table",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tableId\": 1,\n  \"tableName\": \"sys_test\",\n  \"tableComment\": \"测试表\",\n  \"className\": \"SysTest\",\n  \"packageName\": \"module_demo\",\n  \"moduleName\": \"demo\",\n  \"businessName\": \"test\",\n  \"functionName\": \"测试管理\",\n  \"functionAuthor\": \"ruoyi\",\n  \"genType\": \"0\",\n  \"tplCategory\": \"crud\",\n  \"tplWebType\": \"element-plus\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tool/gen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Gen Tables",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tool/gen/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Table (SQL)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tool/gen/createTable?sql=CREATE TABLE IF NOT EXISTS sys_demo(id INT PRIMARY KEY);",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen",
										"createTable"
									],
									"query": [
										{
											"key": "sql",
											"value": "CREATE TABLE IF NOT EXISTS sys_demo(id INT PRIMARY KEY);"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Batch Generate Code (Zip)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tool/gen/batchGenCode?tables=sys_user,sys_dept",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen",
										"batchGenCode"
									],
									"query": [
										{
											"key": "tables",
											"value": "sys_user,sys_dept"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate Code To Local",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tool/gen/genCode/sys_user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen",
										"genCode",
										"sys_user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Gen Table Detail",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tool/gen/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Preview Code",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tool/gen/preview/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen",
										"preview",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sync DB",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tool/gen/synchDb/sys_user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tool",
										"gen",
										"synchDb",
										"sys_user"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Ragflow",
			"item": [
				{
					"name": "Model Management",
					"item": [
						{
							"name": "get LLM factories list",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/llm/factories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"llm",
										"factories"
									]
								}
							},
							"response": []
						},
						{
							"name": "get my LLMs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/llm/my_llms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"llm",
										"my_llms"
									]
								}
							},
							"response": []
						},
						{
							"name": "llm list",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/llm/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"llm",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete one LLM",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"llm_factory\": \"Tongyi-Qianwen\",\n    \"llm_name\": \"deepseek-r1-distill-llama-8b\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/llm/delete_llm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"llm",
										"delete_llm"
									]
								}
							},
							"response": []
						},
						{
							"name": "set api key",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"llm_factory\": \"DeepSeek\",\n    \"api_key\": \"sk-826e7e7424d84b9f81ca565ed87de556\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/llm/set_api_key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"llm",
										"set_api_key"
									]
								}
							},
							"response": []
						},
						{
							"name": "add llm(ollama)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"embedding\",\n    \"llm_name\": \"mxbai-embed-large\",\n    \"api_base\": \"http://10.100.100.35:11434\",\n    \"api_key\": \"sk-4f92c6a1f9d84a7b92a8e2e1c3d6f8b0\",\n    \"max_tokens\": 999999,\n    \"llm_factory\": \"Ollama\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/llm/add_llm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"llm",
										"add_llm"
									]
								}
							},
							"response": []
						},
						{
							"name": "add llm(vLLM)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"chat\",\n    \"llm_name\": \"codegeex4\",\n    \"api_base\": \"http://10.100.100.35:11434\",\n    \"api_key\": \"sk-4f92c6a1f9d84a7b92a8e2e1c3d6f8b0\",\n    \"max_tokens\": 999999,\n    \"llm_factory\": \"VLLM\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/llm/add_llm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"llm",
										"add_llm"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete LLM factory",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"embedding\",\n    \"llm_name\": \"mxbai-embed-large\",\n    \"api_base\": \"http://10.100.100.35:11434\",\n    \"api_key\": \"sk-4f92c6a1f9d84a7b92a8e2e1c3d6f8b0\",\n    \"max_tokens\": 999999,\n    \"llm_factory\": \"Ollama\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/llm/add_llm",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"llm",
										"add_llm"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "kb management",
					"item": [
						{
							"name": "create a kb",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
											"",
											"    // 解析响应 body",
											"    const response = pm.response.json();",
											"",
											"    // 提取 kb_id",
											"    const kb_id = response.data.kb_id;",
											"",
											"    console.log(kb_id)",
											"",
											"    // 将 threadId 存储到环境变量",
											"    pm.environment.set(\"kb_id\", kb_id);",
											"",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"test\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/kb/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"kb",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "list kb",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/kb/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"kb",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "update kb",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"kb_id\": \"{{kb_id}}\",\n    \"name\": \"debug_100501\",\n    \"avatar\": \"\",\n    \"description\": \"for debug purpose\",\n    \"permission\": \"me\",\n    \"parser_config\": {\n        \"layout_recognize\": \"DeepDOC\",\n        \"chunk_token_num\": 512,\n        \"delimiter\": \"\\n\",\n        \"auto_keywords\": 0,\n        \"auto_questions\": 0,\n        \"html4excel\": false,\n        \"raptor\": {\n            \"use_raptor\": false\n        },\n        \"graphrag\": {\n            \"use_graphrag\": false\n        }\n    },\n    \"embd_id\": \"mxbai-embed-large@Ollama\",\n    \"parser_id\": \"naive\",\n    \"pagerank\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/kb/update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"kb",
										"update"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User",
					"item": [
						{
							"name": "set tenant info(set default model)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tenant_id\": \"b8da54dc8ef111f0ab953add0da64685\",\n    \"name\": \"service‘s Kingdom\",\n    \"llm_id\": \"deepseek-v3@Tongyi-Qianwen\",\n    \"embd_id\": \"text-embedding-v3@Tongyi-Qianwen\",\n    \"img2txt_id\": \"qwen-vl-plus@Tongyi-Qianwen\",\n    \"asr_id\": \"\",\n    \"rerank_id\": \"gte-rerank@Tongyi-Qianwen\",\n    \"tts_id\": \"sambert-zhide-v1@Tongyi-Qianwen\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ragflow/v1/user/set_tenant_info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ragflow",
										"v1",
										"user",
										"set_tenant_info"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:9099"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "uuid",
			"value": ""
		},
		{
			"key": "captcha_code",
			"value": ""
		},
		{
			"key": "username",
			"value": "admin"
		},
		{
			"key": "password",
			"value": "admin123"
		},
		{
			"key": "proxy-to-langgraph",
			"value": "http://localhost:9099/proxy/langgraph"
		}
	]
}